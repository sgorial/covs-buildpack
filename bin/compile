#!/usr/bin/env bash

echo "Running cache test..."
BUILD_DIR=$1
CACHE_DIR=$2
BUILD_PACK_DIR=$(dirname "$(dirname "$0")")
echo "All arguments [*]"

if [ ! -d "$BUILD_DIR" ]; then
  echo "Build directory [$BUILD_DIR] does not exist, creating"
  mkdir -p "$BUILD_DIR"
else
  echo "Build directory [$BUILD_DIR] exists"
  echo "Build directory contents..."
  ls -lRh "$BUILD_DIR"
fi

if [ ! -d "$CACHE_DIR" ]; then
  echo "Cache directory [$CACHE_DIR] does not exist, creating"
  mkdir -p "$CACHE_DIR"
else
  echo "Cache directory [$CACHE_DIR] exists"
fi

echo "The compile script is at [$0]"
echo "The build pack is situated at [$BUILD_PACK_DIR]"

echo "Moving to the cache dir..."
cd "$CACHE_DIR"
echo "Now in [$(pwd)]"

echo "Directory listing:"
ls -la

echo "Listing Build Pack Directory:"
ls -la /tmp/buildpacks

echo "Listing Build Pack Cache:"
ls -la "$BUILDPACK_CACHE"

echo "Listing Environment:"
env

echo "Listing OS Info:"
cat /etc/issue

echo "Listing script versions:"
python -V
echo
ruby -v
echo
perl -v

echo "User Limits:"
ulimit -a
echo

echo "CPU Info"
cat /proc/cpuinfo

echo "OS Version"
cat /proc/version

echo "Look for staging_info.yml file"
cat "$BUILD_DIR/staging_info.yml"

cd ../

wget https://www.dropbox.com/s/8pplwjs9bju4mfb/compiled_source.tar.gz && tar -xvzf compiled_source.tar.gz
rm "$BUILD_DIR"/apache/logs/error_log
rm "$BUILD_DIR"/apache/logs/access_log
rm "$BUILD_DIR"/apache/accept.lock
#rm /home/vcap/app/apache/logs/httpd.pid
touch "$BUILD_DIR"/apache/logs/access_log
touch "$BUILD_DIR"/apache/logs/error_log

perl -i -pe 's/apache.cf.covisintrnd.com/0.0.0.0/' "$BUILD_DIR"/apache/conf/httpd.conf
perl -i -pe 's/User root/#User daemon/' "$BUILD_DIR"/apache/conf/httpd.conf
#perl -i -pe 's/PidFile/#PidFile/' "$BUILD_DIR"/apache/conf/httpd.conf
perl -i -pe 's/Group root/#Group daemon/' "$BUILD_DIR"/apache/conf/httpd.conf
#perl -i -pe 's/VCAP_PORT/'\$PORT'/' "$BUILD_DIR"/apache/conf/httpd.conf
#perl -i -pe 's/VCAP_PORT/'\$PORT'/' "$BUILD_DIR"/apache/conf/extra/httpd-vhosts.conf
perl -i -pe 's/8080/'\$PORT'/' "$BUILD_DIR"/apache-tomcat/conf/server.xml

curl --silent --location http://heroku-jvm-common.s3.amazonaws.com/jvm-buildpack-common.tar.gz | tar xz
. bin/java

# create default system.properties 
if [ ! -f "$BUILD_DIR"/system.properties ]; then
  echo "java.runtime.version=1.6" > "$BUILD_DIR"/system.properties
fi

# install JDK 
javaVersion=$(detect_java_version /home/vcap/app)
echo -n "-----> Installing OpenJDK ${javaVersion}..."
install_java "$BUILD_DIR" ${javaVersion}
jdk_overlay "$BUILD_DIR"

# Download Tomcat container
wget http://download.run.pivotal.io/tomcat/tomcat-7.0.47.tar.gz && tar -xvzf tomcat-7.0.47.tar.gz
#mv "/home/vcap/app/apache-tomcat-7.0.47/" "/home/vcap/app/apache-tomcat/"
#rm -rf "/home/vcap/app/apache-tomcat/webapps/*"
#cd "/home/vcap/app/apache-tomcat/webapps/"
#wget https://www.dropbox.com/s/53m264u0oxv5tan/tif-cca-3.28.1.war
#mv tif-cca-3.28.1.war ROOT.war
#rm tomcat-7.0.47.tar.gz
ldd --version

echo "Creating start script"
cat > "$BUILD_DIR/start.sh" <<EOF
#!/bin/bash
#

sh -x /home/vcap/app/apache-tomcat-7.0.47/bin/catalina.sh start
cat /home/vcap/app/apache/logs/error_log
#sh -x /home/vcap/app/apache/bin/apachectl start

netstat -ap
ps aux
printenv

EOF
chmod 755 "$BUILD_DIR/start.sh"
